name: Java CI with Automatic Version Increment

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    #dsfdf
    - name: Increment patch version
      run: |
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout || echo "1.0.0")
        echo "Current version: $current_version"

        if [[ -z "$current_version" || "$current_version" == *"-SNAPSHOT" ]]; then
          current_version="1.0.0"
        fi

        base_version=${current_version%.*}
        patch_version=${current_version##*.}

        new_patch_version=$((patch_version + 1))
        new_version="$base_version.$new_patch_version"

        mvn versions:set -DnewVersion=$new_version -q
        mvn versions:commit -q

        echo "New version set to: $new_version"

    - name: Commit version increment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add pom.xml
        git commit -m "Increment version to $new_version"
        git push

    - name: Build with Maven
      run: mvn clean package

    - name: Build Docker Image
      run: |
        echo "Building Docker image..."
        docker build . -f Dockerfile -t rebachi/github-actions:latest

    - name: Login to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

    - name: Push Docker Image
      run: docker push rebachi/github-actions:latest

    - name: Deploy to EC2 using SSM
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: eu-north-1
      run: |
        aws ssm send-command \
          --instance-ids "i-0a44d89583d44733c" \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=[
            "docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}",
            "docker pull rebachi/github-actions:latest",
            "docker stop myapp || true",
            "docker rm myapp || true",
            "docker run -d --name myapp -p 80:80 rebachi/github-actions:latest"
          ]' \
          --region $AWS_REGION
